% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getBiomarker.R, R/getPCA.R, R/getTSNE.R,
%   R/plotBiomarker.R, R/plotPCA.R, R/plotTSNE.R
\name{getBiomarker}
\alias{getBiomarker}
\alias{getPCA}
\alias{getTSNE}
\alias{plotBiomarker}
\alias{plotPCA}
\alias{plotTSNE}
\title{Get and plot PCA and t-SCE components for a SCtkE object}
\usage{
getBiomarker(inSCE, gene, binary = "Binary", useAssay = "counts")

getPCA(inSCE, useAssay = "logcounts", reducedDimName = "PCA")

getTSNE(inSCE, useAssay = "logcounts", reducedDimName = "TSNE")

plotBiomarker(inSCE, gene, binary = "Binary", visual = "PCA",
  shape = "No Shape", x = "PC1", y = "PC2", useAssay = "counts",
  reducedDimName = "PCA")

plotPCA(inSCE, colorBy = "No Color", shape = "No Shape", pcX = "PC1",
  pcY = "PC2", reducedDimName = "PCA", runPCA = FALSE,
  useAssay = "logcounts")

plotTSNE(inSCE, colorBy = "No Color", shape = "No Shape",
  reducedDimName = "TSNE", runTSNE = FALSE, useAssay = "logcounts")
}
\arguments{
\item{inSCE}{Input SCtkExperiment object. Required}

\item{gene}{gene list}

\item{binary}{"Binary" for binary expression or "Continuous" for a gradient.
Default: "Binary"}

\item{useAssay}{Indicate which assay to use for PCA. Default is "counts"}

\item{reducedDimName}{Store the PCA data with this name. The default is PCA.
The toolkit will store data with the pattern <ASSAY>_<ALGORITHM>.}

\item{visual}{Type of visualization (PCA or tSNE). Default: "PCA"}

\item{shape}{Shape of the points}

\item{x}{x coordinate for PCA}

\item{y}{y coordinate for PCA}

\item{colorBy}{The variable to color clusters by}

\item{pcX}{User choice for the first principal component}

\item{pcY}{User choice for the second principal component}

\item{runPCA}{Run PCA if the reducedDimName does not exist. the Default is
FALSE.}

\item{runTSNE}{Run t-SNE if the reducedDimName does not exist. the Default is
FALSE.}
}
\value{
getBiomarker(): A data.frame of expression values

getPCA(): A SCtkE object with the specified reduecedDim and
pcaVariances updated

getTSNE(): A SCtkE object with the specified reduecedDim and
pcaVariances updated

plotBiomarker(): A Biomarker plot

plotPCA(): A PCA plot

plotTSNE(): A t-SNE plot
}
\description{
Selects the 500 most variable genes in the SCE, performs
PCA or t-SNE based on them and stores the values in the reducedDims slot of
the SCE object.
}
\section{Functions}{
\itemize{
\item \code{getBiomarker}: Given a list of genes and a SCtkExperiment object, return
the binary or continuous expression of the genes.

\item \code{getPCA}: Get PCA components for a SCtkE object

\item \code{getTSNE}: Get t-SNE components for a SCtkE object

\item \code{plotBiomarker}: Given a set of genes, return a ggplot of expression
values.

\item \code{plotPCA}: plot PCA results

\item \code{plotTSNE}: plot t-SNE results
}}

\examples{
getBiomarker(mouseBrainSubsetSCE, gene="C1qa")

data("mouseBrainSubsetSCE")
#add a CPM assay
assay(mouseBrainSubsetSCE, "cpm") <- apply(assay(mouseBrainSubsetSCE,
                                                 "counts"),
                                           2, function(x) {
                                             x / (sum(x) / 1000000)
                                           })
mouseBrainSubsetSCE <- getPCA(mouseBrainSubsetSCE,
                              useAssay = "cpm",
                              reducedDimName = "PCA_cpm")
reducedDims(mouseBrainSubsetSCE)

data("mouseBrainSubsetSCE")
#add a CPM assay
assay(mouseBrainSubsetSCE, "cpm") <- apply(
  assay(mouseBrainSubsetSCE, "counts"), 2, function(x) {
    x / (sum(x) / 1000000)
  })
mouseBrainSubsetSCE <- getTSNE(mouseBrainSubsetSCE, useAssay = "cpm",
                               reducedDimName = "TSNE_cpm")
reducedDims(mouseBrainSubsetSCE)

data("mouseBrainSubsetSCE")
plotBiomarker(mouseBrainSubsetSCE, gene="C1qa", shape="level1class")

data("mouseBrainSubsetSCE")
plotPCA(mouseBrainSubsetSCE, colorBy = "level1class",
        reducedDimName = "PCA_counts")

data("mouseBrainSubsetSCE")
plotTSNE(mouseBrainSubsetSCE, colorBy = "level1class",
         reducedDimName = "TSNE_counts")

}
